# This file defines an Acquia Pipelines build for the Lightning project.
# It builds Lightning and runs its functional tests.
version: 1.0.0
services:
  - mysql
variables:
  global:
    N3_KEY: d973a74f-2b8d-4d58-b24d-8db8faa52aa8
    # For the POC to work, you must add the N3_SECRET environment variable
    # containing your Cloud API secret key:
    #
    # echo -n 'your secret' | pipelines encrypt - --add variables.global.N3_SECRET
    N3_SECRET:
      secure: 2acpv8H5efcrtWrwtC7BzaAABtEaGFEBWOSdkRuoEreo4EvDWlGuu19gJ3exMvt3lpG3YiWQSRUkZwx+9e/sKRHJnQRkV+WMV7jzokXZ7W3GwKgA9z8wU3Qxg6HdOoeUz8ytS4m3ct/HZXlpFYX1+2/nUDGVn/eb0utB6Jt/dqhMdHssPUC3BKTHq5+8INhdpqJ4dg9cBjxOhr5OghH238D40iV6jYSinIm9UseYgca//k3g1zryqXFs1ga4TM2ku2jVoo7l5+9HR5pnG4TxBO1iENhkLTGFDo+KI02MKOFS5+aouBXevulYfvEicp8N0689XawsU+afKj4lQz8t8OB3tM+f5BNv5teN87BN7tGLaKZGeCzCxGrB10zGnif8c6Xrduvy9+P3DXSDkGEgxIBclusMyG8KQPx6EiwgcR4i7iDt3MT3N0XFdx+UWVT2ye3/P7IbVZAGov0pnFPoOYaXmffsxzR0P7C/cBwDvWCI3+fCmgXX9yQCSSo1YPdkV2BFNiXHT7tm3Qa2qSo5TseiLkcAQWAbitJq1ZrlXJ/SQUpDviLXgj1e3va7lXkHZrmhP+PI7LNOFlSoUFfvMbafpyLpZJA7bufn/dYrRtW7Uqg+fk5tRSYEw+Dl+qffNw3DGLq2RNLY3NLYIEYoZ61i+kqqc/+Oy42gSvJM7nkOL4=O6a5IvhOoiqARISsY7Z/Yu4PqRhfwov/42b3yrX2v3h1NlGCdf8LlCGj8QeWLoL5V0ptPYyLAyOIlSXjJEx6VCjHqQUBbd8zMU9QyJ5Ch2xCZRyZ8Rxwo33fXDOGAiNyChP/Y6RA+soseQOuVH9kU3+hr26bNux3chi9vyEI2X0=
    PIPELINES_DEPLOY_URL: https://github.com/acquia/pipelines-examples/releases/download/deploy-latest/pipelines-deploy
    PIPELINES_DEPLOY_TOOL: $HOME/pipelines-deploy
events:
  build:
    steps:
      # Build the codebase.
      - composer:
          type: script
          script:
            - composer validate --no-check-all --ansi
            - composer install
      # Install Drupal ready for testing.
      - install:
          type: script
          script:
            - set -x
            # Create database for new Drupal install. Settings.php can't have creds in it, otherwise Drupal throws AlreadyInstalledException
            - mysql -u root -proot -e "CREATE DATABASE drupal"
            # Move to the docroot to run drush
            - cd docroot
            # Use drush to install the default profile. Change if you want different drush arguments. Mysql must be on 127.0.0.1. Silencing a drush si mail issue. Pass in newly created database called drupal
            - drush site-install -yv lightning --db-url=mysql://root:root@127.0.0.1:3306/drupal
      # Run some tests.
      - test:
          type: script
          script:
            - set -x
            - cd docroot
            - ../bin/drush runserver --default-server=builtin 8080 &>/dev/null &
            - ../bin/phantomjs --webdriver=4444 > /dev/null &
            - sleep 10
            - ../bin/behat --stop-on-failure --config ./sites/default/files/behat.yml

      # Deploy the build artifact to a Cloud on-demand environment.
      - deploy:
          script:
            - curl -o $PIPELINES_DEPLOY_TOOL "$PIPELINES_DEPLOY_URL" && chmod 755 $PIPELINES_DEPLOY_TOOL
            - $PIPELINES_DEPLOY_TOOL
 # Reacts to a PR merge event.
  merge:
    steps:
      # When a GitHub pull request is merged, this deletes the coresponding ODE.
      - deploy:
          script:
            - curl -o $PIPELINES_DEPLOY_TOOL "$PIPELINES_DEPLOY_URL" && chmod 755 $PIPELINES_DEPLOY_TOOL
            - $PIPELINES_DEPLOY_TOOL
